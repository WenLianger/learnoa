<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.dao.userDao">
    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.example.demo.model.userModel">
        <id column="id" property="id" />
        <result column="dept_id" property="deptId" />
        <result column="username" property="username" />
        <result column="password" property="password" />
        <result column="realname" property="realname" />
        <result column="sex" property="sex" />
        <result column="phone" property="phone" />
        <result column="tel" property="tel" />
        <result column="email" property="email" />
<!--        <result column="avatar" property="avatar" />-->
        <result column="job_title" property="jobTitle" />
        <result column="status" property="status" />
        <result column="sort" property="sort" />
        <result column="del_flag" property="delFlag" />
        <result column="create_by" property="createBy" />
        <result column="update_time" property="updateTime" />
        <result column="create_time" property="createTime" />
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id, dept_id, username, password, realname, sex, phone, tel, email, avatar, job_title, status, sort, del_flag, create_by, update_time, create_time
    </sql>

    <!--验证用户账号和密码-->
    <select id="getInfo" parameterType="String" resultType="com.example.demo.model.userModel" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List" /> FROM sys_user WHERE username = #{name} AND password = #{password}
    </select>

    <!--根据ID查询用户信息-->
    <select id="selectUserById" parameterType="String" resultType="com.example.demo.model.userModel" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List" /> FROM sys_user WHERE id = #{id}
    </select>
    <!--根据用户名查询用户信息-->
    <select id="selectUserByUsername" resultType="com.example.demo.model.userModel" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List" /> FROM sys_user WHERE username = #{username}
    </select>

    <!--插入新用户信息，ID是自动生成的,返回数据库操作影响行数，为0则是失败-->
    <insert id="insertUser" parameterType="com.example.demo.model.userModel">
        INSERT INTO user(username,password,role) VALUES (#{name},#{password},#{role})
    </insert>

    <!--根据ID删除用户，返回数据库操作影响行数，为0则是失败-->
    <delete id="deleteUser" parameterType="String">
        DELETE FROM user WHERE id = #{id}
    </delete>

    <!--根据ID修改用户信息，返回数据库操作影响行数，为0则是失败-->
    <update id="updateUser" parameterType="com.example.demo.model.userModel">
        UPDATE user SET username = #{name},password = #{password},role = #{role} WHERE id = #{id}
    </update>

    <!--查询所有用户信息，返回一个List<Bean>-->
    <select id="getAllUser" resultType="com.example.demo.model.userModel" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List" /> FROM sys_user
    </select>

    <select id="selectUserList" resultType="com.example.demo.model.userModel" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List" /> FROM sys_user ORDER BY sort ASC
    </select>
</mapper>